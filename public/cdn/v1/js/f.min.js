
var params_neiros = window.location.search
    .replace('?','')
    .split('&')
    .reduce(
        function(p,e){
            var a = e.split('=');
            p[ decodeURIComponent(a[0])] = decodeURIComponent(a[1]);
            return p;
        },
        {
			
			
			}
    );
function get_cookie(cookie_name) {
    var results = document.cookie.match('(^|;) ?' + cookie_name + '=([^;]*)(;|$)');

    if (results)
        return (unescape(results[2]));
    else
        return null;
}	
var NeirosDatalayer = [];	
var show_phone_neiros = 0;    
neiros_visit = get_cookie("neiros_visit_v1");
if(neiros_visit == '1978561'){
	 document.querySelector("#neiros__chat_start, #neiros__callback_start, #neiros__callback_before_iframe").remove();

	
	}
var neiros_last_vst = get_cookie("neiros_last_vst");
var roi_get=0;
var roistat_visit = get_cookie_roistat("roistat_visit");

var myhash = generate("xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx");

/*console.log(roistat_visit);;*/
!function (e) {
    if ("object" == typeof exports && "undefined" != typeof module) module.exports = e(); else if ("function" == typeof define && define.amd) define([], e); else {
        var f;
        "undefined" != typeof window ? f = window : "undefined" != typeof global ? f = global : "undefined" != typeof self && (f = self), f.sbjs = e()
    }
}(function () {
    var define, module, exports;
    return (function e(t, n, r) {
        function s(o, u) {
            if (!n[o]) {
                if (!t[o]) {
                    var a = typeof require == "function" && require;
                    if (!u && a) return a(o, !0);
                    if (i) return i(o, !0);
                    var f = new Error("Cannot find module '" + o + "'");
                    throw f.code = "MODULE_NOT_FOUND", f
                }
                var l = n[o] = {exports: {}};
                t[o][0].call(l.exports, function (e) {
                    var n = t[o][1][e];
                    return s(n ? n : e)
                }, l, l.exports, e, t, n, r)
            }
            return n[o].exports
        }

        var i = typeof require == "function" && require;
        for (var o = 0; o < r.length; o++) s(r[o]);
        return s
    })({
        1: [function (_dereq_, module, exports) {
            "use strict";

            var init = _dereq_('./init');

            var sbjs = {
                init: function (prefs) {
                    this.get = init(prefs);
                    if (prefs && prefs.callback && typeof prefs.callback === 'function') {
                        prefs.callback(this.get);
                    }
                }
            };

            module.exports = sbjs;
        }, {"./init": 6}], 2: [function (_dereq_, module, exports) {
            "use strict";

            var terms = _dereq_('./terms'),
                utils = _dereq_('./helpers/utils');

            var data = {

                containers: {
                    current: 'sbjs_current',
                    current_extra: 'sbjs_current_add',
                    first: 'sbjs_first',
                    first_extra: 'sbjs_first_add',
                    session: 'sbjs_session',
                    udata: 'sbjs_udata',
                    promocode: 'sbjs_promo'
                },

                service: {
                    migrations: 'sbjs_migrations'
                },

                delimiter: '|||',

                aliases: {

                    main: {
                        type: 'typ',
                        source: 'src',
                        medium: 'mdm',
                        campaign: 'cmp',
                        content: 'cnt',
                        term: 'trm'
                    },

                    extra: {
                        fire_date: 'fd',
                        entrance_point: 'ep',
                        referer: 'rf',
                        hash: "hash"
                    },

                    session: {
                        pages_seen: 'pgs',
                        current_page: 'cpg'
                    },

                    udata: {
                        visits: 'vst',
                        ip: 'uip',
                        agent: 'uag'
                    },

                    promo: 'code'

                },

                pack: {

                    main: function (sbjs) {
                        return (
                            data.aliases.main.type + '=' + sbjs.type + data.delimiter +
                            data.aliases.main.source + '=' + sbjs.source + data.delimiter +
                            data.aliases.main.medium + '=' + sbjs.medium + data.delimiter +
                            data.aliases.main.campaign + '=' + sbjs.campaign + data.delimiter +
                            data.aliases.main.content + '=' + sbjs.content + data.delimiter +
                            data.aliases.main.term + '=' + sbjs.term + data.delimiter +
                            'hash=' + myhash
                        );
                    },

                    extra: function (timezone_offset) {
                        return (
                            data.aliases.extra.fire_date + '=' + utils.setDate(new Date, timezone_offset) + data.delimiter +
                            data.aliases.extra.entrance_point + '=' + document.location.href + data.delimiter +
                            data.aliases.extra.referer + '=' + (document.referrer || terms.none) + data.delimiter +
                            'hash=' + myhash
                        );
                    },

                    user: function (visits, user_ip) {
                        return (
                            data.aliases.udata.visits + '=' + visits + data.delimiter +
                            data.aliases.udata.ip + '=' + user_ip + data.delimiter +
                            data.aliases.udata.agent + '=' + navigator.userAgent
                        );
                    },

                    session: function (pages) {
                        return (
                            data.aliases.session.pages_seen + '=' + pages + data.delimiter +
                            data.aliases.session.current_page + '=' + document.location.href
                        );
                    },

                    promo: function (promo) {
                        return (
                            data.aliases.promo + '=' + utils.setLeadingZeroToInt(utils.randomInt(promo.min, promo.max), promo.max.toString().length)
                        );
                    }

                }
            };

            module.exports = data;
        }, {"./helpers/utils": 5, "./terms": 9}], 3: [function (_dereq_, module, exports) {
            "use strict";

            var delimiter = _dereq_('../data').delimiter;

            module.exports = {

                encodeData: function (s) {
                    return encodeURIComponent(s).replace(/\!/g, '%21')
                        .replace(/\~/g, '%7E')
                        .replace(/\*/g, '%2A')
                        .replace(/\'/g, '%27')
                        .replace(/\(/g, '%28')
                        .replace(/\)/g, '%29');
                },

                decodeData: function (s) {
                    try {
                        return decodeURIComponent(s).replace(/\%21/g, '!')
                            .replace(/\%7E/g, '~')
                            .replace(/\%2A/g, '*')
                            .replace(/\%27/g, "'")
                            .replace(/\%28/g, '(')
                            .replace(/\%29/g, ')');
                    } catch (err1) {
                        // try unescape for backward compatibility
                        try {
                            return unescape(s);
                        } catch (err2) {
                            return '';
                        }
                    }
                },

                set: function (name, value, minutes, domain, excl_subdomains) {
                    var expires, basehost;

                    if (minutes) {
                        var date = new Date();
                        date.setTime(date.getTime() + (minutes * 60 * 1000));
                        expires = '; expires=' + date.toGMTString();
                    } else {
                        expires = '';
                    }
                    if (domain && !excl_subdomains) {
                        basehost = ';domain=.' + domain;
                    } else {
                        basehost = '';
                    }
                    document.cookie = this.encodeData(name) + '=' + this.encodeData(value) + expires + basehost + '; path=/';
                },

                get: function (name) {
                    var nameEQ = this.encodeData(name) + '=',
                        ca = document.cookie.split(';');

                    for (var i = 0; i < ca.length; i++) {
                        var c = ca[i];
                        while (c.charAt(0) === ' ') {
                            c = c.substring(1, c.length);
                        }
                        if (c.indexOf(nameEQ) === 0) {
                            return this.decodeData(c.substring(nameEQ.length, c.length));
                        }
                    }
                    return null;
                },

                destroy: function (name, domain, excl_subdomains) {
                    this.set(name, '', -1, domain, excl_subdomains);
                },

                parse: function (yummy) {

                    var cookies = [],
                        data = {};

                    if (typeof yummy === 'string') {
                        cookies.push(yummy);
                    } else {
                        for (var prop in yummy) {
                            if (yummy.hasOwnProperty(prop)) {
                                cookies.push(yummy[prop]);
                            }
                        }
                    }

                    for (var i1 = 0; i1 < cookies.length; i1++) {
                        var cookie_array;
                        data[this.unsbjs(cookies[i1])] = {};
                        if (this.get(cookies[i1])) {
                            cookie_array = this.get(cookies[i1]).split(delimiter);
                        } else {
                            cookie_array = [];
                        }
                        for (var i2 = 0; i2 < cookie_array.length; i2++) {
                            var tmp_array = cookie_array[i2].split('='),
                                result_array = tmp_array.splice(0, 1);
                            result_array.push(tmp_array.join('='));
                            data[this.unsbjs(cookies[i1])][result_array[0]] = this.decodeData(result_array[1]);
                        }
                    }

                    return data;

                },

                unsbjs: function (string) {
                    return string.replace('sbjs_', '');
                }

            };

        }, {"../data": 2}], 4: [function (_dereq_, module, exports) {
            "use strict";

            module.exports = {

                parse: function (str) {
                    var o = this.parseOptions,
                        m = o.parser[o.strictMode ? 'strict' : 'loose'].exec(str),
                        uri = {},
                        i = 14;

                    while (i--) {
                        uri[o.key[i]] = m[i] || '';
                    }

                    uri[o.q.name] = {};
                    uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {
                        if ($1) {
                            uri[o.q.name][$1] = $2;
                        }
                    });

                    return uri;
                },

                parseOptions: {
                    strictMode: false,
                    key: ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'],
                    q: {
                        name: 'queryKey',
                        parser: /(?:^|&)([^&=]*)=?([^&]*)/g
                    },
                    parser: {
                        strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,
                        loose: /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/
                    }
                },

                getParam: function (custom_params) {
                    var query_string = {},
                        query = custom_params ? custom_params : window.location.search.substring(1),
                        vars = query.split('&');

                    for (var i = 0; i < vars.length; i++) {
                        var pair = vars[i].split('=');
                        if (typeof query_string[pair[0]] === 'undefined') {
                            query_string[pair[0]] = pair[1];
                        } else if (typeof query_string[pair[0]] === 'string') {
                            var arr = [query_string[pair[0]], pair[1]];
                            query_string[pair[0]] = arr;
                        } else {
                            query_string[pair[0]].push(pair[1]);
                        }
                    }
                    return query_string;
                },

                getHost: function (request) {
                    return this.parse(request).host.replace('www.', '');
                }

            };
        }, {}], 5: [function (_dereq_, module, exports) {
            "use strict";

            module.exports = {

                escapeRegexp: function (string) {
                    return string.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&");
                },

                setDate: function (date, offset) {
                    var utc_offset = date.getTimezoneOffset() / 60,
                        now_hours = date.getHours(),
                        custom_offset = offset || offset === 0 ? offset : -utc_offset;

                    date.setHours(now_hours + utc_offset + custom_offset);

                    var year = date.getFullYear(),
                        month = this.setLeadingZeroToInt(date.getMonth() + 1, 2),
                        day = this.setLeadingZeroToInt(date.getDate(), 2),
                        hour = this.setLeadingZeroToInt(date.getHours(), 2),
                        minute = this.setLeadingZeroToInt(date.getMinutes(), 2),
                        second = this.setLeadingZeroToInt(date.getSeconds(), 2);

                    return (year + '-' + month + '-' + day + ' ' + hour + ':' + minute + ':' + second);
                },

                setLeadingZeroToInt: function (num, size) {
                    var s = num + '';
                    while (s.length < size) {
                        s = '0' + s;
                    }
                    return s;
                },

                randomInt: function (min, max) {
                    return Math.floor(Math.random() * (max - min + 1)) + min;
                }

            };

        }, {}], 6: [function (_dereq_, module, exports) {
            "use strict";

            var data = _dereq_('./data'),
                terms = _dereq_('./terms'),
                cookies = _dereq_('./helpers/cookies'),
                uri = _dereq_('./helpers/uri'),
                utils = _dereq_('./helpers/utils'),
                params = _dereq_('./params'),
                migrations = _dereq_('./migrations');

            module.exports = function (prefs) {

                var p = params.fetch(prefs);
                var get_param = uri.getParam();
                var domain = p.domain.host,
                    isolate = p.domain.isolate,
                    lifetime = p.lifetime;

                migrations.go(lifetime, domain, isolate);

                var __sbjs_type,
                    __sbjs_source,
                    __sbjs_medium,
                    __sbjs_campaign,
                    __sbjs_content,
                    __sbjs_term;

                function mainData() {
                    var sbjs_data;
                    if (
                        typeof get_param.utm_source !== 'undefined' ||
                        typeof get_param.utm_medium !== 'undefined' ||
                        typeof get_param.utm_campaign !== 'undefined' ||
                        typeof get_param.utm_content !== 'undefined' ||
                        typeof get_param.utm_term !== 'undefined' ||
                        typeof get_param.gclid !== 'undefined' ||
                        typeof get_param.yclid !== 'undefined' ||
                        typeof get_param[p.campaign_param] !== 'undefined' ||
                        typeof get_param[p.term_param] !== 'undefined' ||
                        typeof get_param[p.content_param] !== 'undefined'
                    ) {
                        setFirstAndCurrentExtraData();
                        sbjs_data = getData(terms.traffic.utm);
						console.log(terms.traffic.utm)
                    } else if (checkReferer(terms.traffic.organic)) {
                        setFirstAndCurrentExtraData();
                        sbjs_data = getData(terms.traffic.organic);
                    } else if (checkReferer(terms.traffic.referral)) {
                        setFirstAndCurrentExtraData();
                        sbjs_data = getData(terms.traffic.referral);
                    } else if (!cookies.get(data.containers.first) && !cookies.get(data.containers.current)) {
                        setFirstAndCurrentExtraData();
                        sbjs_data = getData(terms.traffic.typein);
                    } else {
                        return cookies.get(data.containers.current);
                    }

                    return sbjs_data;
                }

                function getData(type) {

                    switch (type) {

                        case terms.traffic.utm:

                            __sbjs_type = terms.traffic.utm;

                            if (typeof get_param.utm_source !== 'undefined') {
                                __sbjs_source = get_param.utm_source;
                            } else if (typeof get_param.gclid !== 'undefined') {
                                __sbjs_source = 'google';
                            } else if (typeof get_param.yclid !== 'undefined') {
                                __sbjs_source = 'yandex';
                            } else {
                                __sbjs_source = terms.none;
                            }

                            if (typeof get_param.utm_medium !== 'undefined') {
                                __sbjs_medium = get_param.utm_medium;
                            } else if (typeof get_param.gclid !== 'undefined') {
                                __sbjs_medium = 'cpc';
                            } else if (typeof get_param.yclid !== 'undefined') {
                                __sbjs_medium = 'cpc';
                            } else {
                                __sbjs_medium = terms.none;
                            }

                            if (typeof get_param.utm_campaign !== 'undefined') {
                                __sbjs_campaign = get_param.utm_campaign;
                            } else if (typeof get_param[p.campaign_param] !== 'undefined') {
                                __sbjs_campaign = get_param[p.campaign_param];
                            } else if (typeof get_param.gclid !== 'undefined') {
                                __sbjs_campaign = 'google_cpc';
                            } else if (typeof get_param.yclid !== 'undefined') {
                                __sbjs_campaign = 'yandex_cpc';
                            } else {
                                __sbjs_campaign = terms.none;
                            }

                            if (typeof get_param.utm_content !== 'undefined') {
                                __sbjs_content = get_param.utm_content;
                            } else if (typeof get_param[p.content_param] !== 'undefined') {
                                __sbjs_content = get_param[p.content_param];
                            } else {
                                __sbjs_content = terms.none;
                            }

                            if (typeof get_param.utm_term !== 'undefined') {
                                __sbjs_term = get_param.utm_term;
                            } else if (typeof get_param[p.term_param] !== 'undefined') {
                                __sbjs_term = get_param[p.term_param];
                            } else {
                                __sbjs_term = getUtmTerm() || terms.none;
                            }

                            break;

                        case terms.traffic.organic:
                            __sbjs_type = terms.traffic.organic;
                            __sbjs_source = __sbjs_source || uri.getHost(document.referrer);
                            __sbjs_medium = terms.referer.organic;
                            __sbjs_campaign = terms.none;
                            __sbjs_content = terms.none;
                            __sbjs_term = terms.none;
                            break;

                        case terms.traffic.referral:
                            __sbjs_type = terms.traffic.referral;
                            __sbjs_source = __sbjs_source || uri.getHost(document.referrer);
                            __sbjs_medium = __sbjs_medium || terms.referer.referral;
                            __sbjs_campaign = terms.none;
                            __sbjs_content = uri.parse(document.referrer).path;
                            __sbjs_term = terms.none;
                            break;

                        case terms.traffic.typein:
                            __sbjs_type = terms.traffic.typein;
                            __sbjs_source = p.typein_attributes.source;
                            __sbjs_medium = p.typein_attributes.medium;
                            __sbjs_campaign = terms.none;
                            __sbjs_content = terms.none;
                            __sbjs_term = terms.none;
                            break;

                        default:
                            __sbjs_type = terms.oops;
                            __sbjs_source = terms.oops;
                            __sbjs_medium = terms.oops;
                            __sbjs_campaign = terms.oops;
                            __sbjs_content = terms.oops;
                            __sbjs_term = terms.oops;
                    }
                    var sbjs_data = {
                        type: __sbjs_type,
                        source: __sbjs_source,
                        medium: __sbjs_medium,
                        campaign: __sbjs_campaign,
                        content: __sbjs_content,
                        term: __sbjs_term
                    };

                    return data.pack.main(sbjs_data);

                }

                function getUtmTerm() {
                    var referer = document.referrer;
                    if (get_param.utm_term) {
                        return get_param.utm_term;
                    } else if (referer && uri.parse(referer).host && uri.parse(referer).host.match(/^(?:.*\.)?yandex\..{2,9}$/i)) {
                        try {
                            return uri.getParam(uri.parse(document.referrer).query).text;
                        } catch (err) {
                            return false;
                        }
                    } else {
                        return false;
                    }
                }

                function checkReferer(type) {
                    var referer = document.referrer;
                    switch (type) {
                        case terms.traffic.organic:
                            return (!!referer && checkRefererHost(referer) && isOrganic(referer));
                        case terms.traffic.referral:
                            return (!!referer && checkRefererHost(referer) && isReferral(referer));
                        default:
                            return false;
                    }
                }

                function checkRefererHost(referer) {
                    if (p.domain) {
                        if (!isolate) {
                            var host_regex = new RegExp('^(?:.*\\.)?' + utils.escapeRegexp(domain) + '$', 'i');
                            return !(uri.getHost(referer).match(host_regex));
                        } else {
                            return (uri.getHost(referer) !== uri.getHost(domain));
                        }
                    } else {
                        return (uri.getHost(referer) !== uri.getHost(document.location.href));
                    }
                }

                function isOrganic(referer) {

                    var y_host = 'yandex',
                        y_param = 'text',
                        g_host = 'google';

                    var y_host_regex = new RegExp('^(?:.*\\.)?' + utils.escapeRegexp(y_host) + '\\..{2,9}$'),
                        y_param_regex = new RegExp('.*' + utils.escapeRegexp(y_param) + '=.*'),
                        g_host_regex = new RegExp('^(?:www\\.)?' + utils.escapeRegexp(g_host) + '\\..{2,9}$');
					
                    if (
                        !!uri.parse(referer).query &&
                        !!uri.parse(referer).host.match(y_host_regex) &&
                        !!uri.parse(referer).query.match(y_param_regex)
                    ) {
                        __sbjs_source = y_host;
						
                        return true;
                    } else if (!!uri.parse(referer).host.match(g_host_regex)) {
                        __sbjs_source = g_host;
                        return true;
                    } else if (!!uri.parse(referer).query) {
                        for (var i = 0; i < p.organics.length; i++) {
                            if (
                                uri.parse(referer).host.match(new RegExp('^(?:.*\\.)?' + utils.escapeRegexp(p.organics[i].host) + '$', 'i')) &&
                                uri.parse(referer).query.match(new RegExp('.*' + utils.escapeRegexp(p.organics[i].param) + '=.*', 'i'))
                            ) {
                                __sbjs_source = p.organics[i].display || p.organics[i].host;
                                return true;
                            }
                            if (i + 1 === p.organics.length) {
                                return false;
                            }
                        }
                    } else {
                        return false;
                    }
                }

                function isReferral(referer) {
                    if (p.referrals.length > 0) {
                        for (var i = 0; i < p.referrals.length; i++) {
                            if (uri.parse(referer).host.match(new RegExp('^(?:.*\\.)?' + utils.escapeRegexp(p.referrals[i].host) + '$', 'i'))) {
                                __sbjs_source = p.referrals[i].display || p.referrals[i].host;
                                __sbjs_medium = p.referrals[i].medium || terms.referer.referral;
                                return true;
                            }
                            if (i + 1 === p.referrals.length) {
                                __sbjs_source = uri.getHost(referer);
                                return true;
                            }
                        }
                    } else {
                        __sbjs_source = uri.getHost(referer);
                        return true;
                    }
                }

                function setFirstAndCurrentExtraData() {
                    cookies.set(data.containers.current_extra, data.pack.extra(p.timezone_offset), lifetime, domain, isolate);
					
                    if (!cookies.get(data.containers.first_extra)) {
                        cookies.set(data.containers.first_extra, data.pack.extra(p.timezone_offset), lifetime, domain, isolate);
                    }
                }

                (function setData() {
					console.log(data.pack.extra(p.timezone_offset));
                    // Main data
                    cookies.set(data.containers.current, mainData(), lifetime, domain, isolate);
                    if (!cookies.get(data.containers.first)) {
                        cookies.set(data.containers.first, cookies.get(data.containers.current), lifetime, domain, isolate);
                    }

                    // User data
                    var visits, udata;
                    if (!cookies.get(data.containers.udata)) {
                        visits = 1;
                        udata = data.pack.user(visits, p.user_ip);
                    } else {
                        visits = parseInt(cookies.parse(data.containers.udata)[cookies.unsbjs(data.containers.udata)][data.aliases.udata.visits]) || 1;
                        visits = cookies.get(data.containers.session) ? visits : visits + 1;
                        udata = data.pack.user(visits, p.user_ip);
                    }
                    cookies.set(data.containers.udata, udata, lifetime, domain, isolate);

                    // Session
                    var pages_count;
                    if (!cookies.get(data.containers.session)) {
                        pages_count = 1;
                    } else {
                        pages_count = parseInt(cookies.parse(data.containers.session)[cookies.unsbjs(data.containers.session)][data.aliases.session.pages_seen]) || 1;
                        pages_count += 1;
                    }
                    cookies.set(data.containers.session, data.pack.session(pages_count), p.session_length, domain, isolate);

                    // Promocode
                    if (p.promocode && !cookies.get(data.containers.promocode)) {
                        cookies.set(data.containers.promocode, data.pack.promo(p.promocode), lifetime, domain, isolate);
                    }

                })();

                return cookies.parse(data.containers);

            };
        }, {
            "./data": 2,
            "./helpers/cookies": 3,
            "./helpers/uri": 4,
            "./helpers/utils": 5,
            "./migrations": 7,
            "./params": 8,
            "./terms": 9
        }], 7: [function (_dereq_, module, exports) {
            "use strict";

            var data = _dereq_('./data'),
                cookies = _dereq_('./helpers/cookies');

            module.exports = {

                go: function (lifetime, domain, isolate) {

                    var migrate = this.migrations,
                        _with = {l: lifetime, d: domain, i: isolate};

                    var i;

                    if (!cookies.get(data.containers.first) && !cookies.get(data.service.migrations)) {

                        var mids = [];
                        for (i = 0; i < migrate.length; i++) {
                            mids.push(migrate[i].id);
                        }

                        var advance = '';
                        for (i = 0; i < mids.length; i++) {
                            advance += mids[i] + '=1';
                            if (i < mids.length - 1) {
                                advance += data.delimiter;
                            }
                        }
                        cookies.set(data.service.migrations, advance, _with.l, _with.d, _with.i);

                    } else if (!cookies.get(data.service.migrations)) {

                        // We have only one migration for now, so just
                        for (i = 0; i < migrate.length; i++) {
                            migrate[i].go(migrate[i].id, _with);
                        }

                    }

                },

                migrations: [

                    {
                        id: '1418474375998',
                        version: '1.0.0-beta',
                        go: function (mid, _with) {

                            var success = mid + '=1',
                                fail = mid + '=0';

                            var safeReplace = function ($0, $1, $2) {
                                return ($1 || $2 ? $0 : data.delimiter);
                            };

                            try {

                                // Switch delimiter and renew cookies
                                var _in = [];
                                for (var prop in data.containers) {
                                    if (data.containers.hasOwnProperty(prop)) {
                                        _in.push(data.containers[prop]);
                                    }
                                }

                                for (var i = 0; i < _in.length; i++) {
                                    if (cookies.get(_in[i])) {
                                        var buffer = cookies.get(_in[i]).replace(/(\|)?\|(\|)?/g, safeReplace);
                                        cookies.destroy(_in[i], _with.d, _with.i);
                                        cookies.destroy(_in[i], _with.d, !_with.i);
                                        cookies.set(_in[i], buffer, _with.l, _with.d, _with.i);
                                    }
                                }

                                // Update `session`
                                if (cookies.get(data.containers.session)) {
                                    cookies.set(data.containers.session, data.pack.session(0), _with.l, _with.d, _with.i);
                                }

                                // Yay!
                                cookies.set(data.service.migrations, success, _with.l, _with.d, _with.i);

                            } catch (err) {
                                // Oops
                                cookies.set(data.service.migrations, fail, _with.l, _with.d, _with.i);
                            }
                        }
                    }

                ]

            };
        }, {"./data": 2, "./helpers/cookies": 3}], 8: [function (_dereq_, module, exports) {
            "use strict";

            var terms = _dereq_('./terms'),
                uri = _dereq_('./helpers/uri');

            module.exports = {

                fetch: function (prefs) {

                    var user = prefs || {},
                        params = {};

                    // Set `lifetime of the cookie` in months
                    params.lifetime = this.validate.checkFloat(user.lifetime) || 6;
                    params.lifetime = parseInt(params.lifetime * 30 * 24 * 60);

                    // Set `session length` in minutes
                    params.session_length = this.validate.checkInt(user.session_length) || 30;

                    // Set `timezone offset` in hours
                    params.timezone_offset = this.validate.checkInt(user.timezone_offset);

                    // Set `campaign param` for AdWords links
                    params.campaign_param = user.campaign_param || false;

                    // Set `term param` and `content param` for AdWords links
                    params.term_param = user.term_param || false;
                    params.content_param = user.content_param || false;

                    // Set `user ip`
                    params.user_ip = user.user_ip || terms.none;

                    // Set `promocode`
                    if (user.promocode) {
                        params.promocode = {};
                        params.promocode.min = parseInt(user.promocode.min) || 100000;
                        params.promocode.max = parseInt(user.promocode.max) || 999999;
                    } else {
                        params.promocode = false;
                    }

                    // Set `typein attributes`
                    if (user.typein_attributes && user.typein_attributes.source && user.typein_attributes.medium) {
                        params.typein_attributes = {};
                        params.typein_attributes.source = user.typein_attributes.source;
                        params.typein_attributes.medium = user.typein_attributes.medium;
                    } else {
                        params.typein_attributes = {source: '(direct)', medium: '(none)'};
                    }

                    // Set `domain`
                    if (user.domain && this.validate.isString(user.domain)) {
                        params.domain = {host: user.domain, isolate: false};
                    } else if (user.domain && user.domain.host) {
                        params.domain = user.domain;
                    } else {
                        params.domain = {host: uri.getHost(document.location.hostname), isolate: false};
                    }

                    // Set `referral sources`
                    params.referrals = [];

                    if (user.referrals && user.referrals.length > 0) {
                        for (var ir = 0; ir < user.referrals.length; ir++) {
                            if (user.referrals[ir].host) {
                                params.referrals.push(user.referrals[ir]);
                            }
                        }
                    }

                    // Set `organic sources`
                    params.organics = [];

                    if (user.organics && user.organics.length > 0) {
                        for (var io = 0; io < user.organics.length; io++) {
                            if (user.organics[io].host && user.organics[io].param) {
                                params.organics.push(user.organics[io]);
                            }
                        }
                    }

                    params.organics.push({host: 'bing.com', param: 'q', display: 'bing'});
                    params.organics.push({host: 'yahoo.com', param: 'p', display: 'yahoo'});
                    params.organics.push({host: 'about.com', param: 'q', display: 'about'});
                    params.organics.push({host: 'aol.com', param: 'q', display: 'aol'});
                    params.organics.push({host: 'ask.com', param: 'q', display: 'ask'});
                    params.organics.push({host: 'globososo.com', param: 'q', display: 'globo'});
                    params.organics.push({host: 'go.mail.ru', param: 'q', display: 'go.mail.ru'});
                    params.organics.push({host: 'rambler.ru', param: 'query', display: 'rambler'});
                    params.organics.push({host: 'tut.by', param: 'query', display: 'tut.by'});

                    params.referrals.push({host: 't.co', display: 'twitter.com'});
                    params.referrals.push({host: 'plus.url.google.com', display: 'plus.google.com'});


                    return params;

                },

                validate: {

                    checkFloat: function (v) {
                        return v && this.isNumeric(parseFloat(v)) ? parseFloat(v) : false;
                    },

                    checkInt: function (v) {
                        return v && this.isNumeric(parseInt(v)) ? parseInt(v) : false;
                    },

                    isNumeric: function (v) {
                        return !isNaN(v);
                    },

                    isString: function (v) {
                        return Object.prototype.toString.call(v) === '[object String]';
                    }

                }

            };
        }, {"./helpers/uri": 4, "./terms": 9}], 9: [function (_dereq_, module, exports) {
            "use strict";

            module.exports = {

                traffic: {
                    utm: 'utm',
                    organic: 'organic',
                    referral: 'referral',
                    typein: 'typein'
                },

                referer: {
                    referral: 'referral',
                    organic: 'organic',
                    social: 'social'
                },

                none: '(none)',
                oops: '(Houston, we have a problem)'

            };

        }, {}]
    }, {}, [1])(1)
});
sbjs.init({
    lifetime: 3,
    session_length: 15, 
    domain: {
        host: CBU_GLOBAL.config.site,
        isolate: true
    },
    referrals: [
        {
            host: 'away.vk.com',          // This is host from Twitter's `http referer`
            medium: 'social',      // This is custom `utm_medium`, you can drop it and it'll be `referral`
            display: 'vk.com' // And this is how you'll see it in the result data
        }],
    promocode: true,
    callback: placeData
});


function generate(str) {
    return str.replace(/[xy]/g, function (c) {
        var r = Math.random() * 16 | 0;
        return (c == 'x' ? r : (r & 0x3 | 0x8)).toString(16);
    });
}

function in_array(what, where) {

    for (var i = 0; i < where.length; i++)

        if (what == where[i])

            return 1;

    return 0;

}

function replacenumber(olev_phone_track2, olev_phone_track, class222) {
/*document.body.innerHTML = document.body.innerHTML.replace(/+7(812)200-83-59/g, '12312312');*/
    xelsement = class222.split(',');
	if(xelsement.length > 0){
    for (var ii = 0; ii < xelsement.length; ii++) {

        idelement = xelsement[ii].split('#')[1];
        classelement = xelsement[ii].split('.')[1];

        a = document.getElementsByClassName(classelement);
	/*	 console.log(a);*/
        for (var i = 0; i < a.length; i++) {
            /*console.log('найдкн класс');*/
            if (CBU_GLOBAL.config.widget.withurl == 1) {
                a[i].innerHTML = '<a href="tel:' + olev_phone_track2 + '">' + olev_phone_track + '</a>';

            } else {
				if(a[i].innerHTML != ''){
                a[i].innerHTML = olev_phone_track;}
				if(a[i].hasAttribute('href')){
				a[i].setAttribute('href', 'tel:'+olev_phone_track)}
						else{  
					if(a[i].closest('a')){
					if(a[i].closest('a').hasAttribute('href')){
						a[i].closest('a').setAttribute('href', 'tel:'+olev_phone_track)
						}}	
					}
				
            }
            DINAMICPHONE = olev_phone_track;
        }

        bn = document.getElementById(idelement);


        if (bn != null) {
            if (CBU_GLOBAL.config.widget.withurl == 1) {
                bn.innerHTML = '<a href="tel:' + olev_phone_track2 + '">' + olev_phone_track + '</a>';
            } else {
                bn.innerHTML = olev_phone_track;
				if(bn.hasAttribute('href')){
				bn.setAttribute('href', 'tel:'+olev_phone_track)}
            }

            DINAMICPHONE = olev_phone_track;
        }
    }
	
	}
}
	function podmena_dinamic(phone1, phone2){	    /*Определим динамика или статика*/
     			  
		
                /*старт подмены*/
                olev_phone_track = get_cookie("olev_phone_track");
                olev_phone_track2 = get_cookie("olev_phone_track2");


                if (olev_phone_track == null) {
                    setCookie("olev_phone_track", phone1, {
                        expires: 900
                    });
                    setCookie("olev_phone_track2", phone2, {
                        expires: 900
                    });
                    olev_phone_track = phone1;
                    olev_phone_track2 = phone2;
                } else {
                    setCookie("olev_phone_track", olev_phone_track, {
                        expires: 900
                    })
                    setCookie("olev_phone_track2", olev_phone_track2, {
                        expires: 900
                    })
                    olev_phone_track2 = phone2;

                }

                /**/

                if (olev_phone_track.length < 2) {
                    setCookie("olev_phone_track", phone1, {
                        expires: 900
                    });
                    setCookie("olev_phone_track2", phone2, {
                        expires: 900
                    });
                    olev_phone_track = phone1;
                    olev_phone_track2 = phone2;
                }
                if (olev_phone_track2.length < 2) {

                    setCookie("olev_phone_track2", phone2, {
                        expires: 900
                    });

                    olev_phone_track2 = phone2;
                }
                if (olev_phone_track2 == null) {

                    setCookie("olev_phone_track2", phone2, {
                        expires: 900
                    });

                    olev_phone_track2 = phone2;
                }
				mass = {olev_phone_track: olev_phone_track, olev_phone_track2:olev_phone_track2}
				return mass;
				
				}
function placeData(sb) {


    var _ym_uid = get_cookie("_ym_uid");
    var _gid = get_cookie("_gid");
	if(_gid){
	_gid = _gid.split('.');
	_gid = _gid[2]+'.'+_gid[3];}
    var olev_phone_track = '';
    var olev_phone_track2 = '';
/*    console.log(sb);
    console.log(CBU_GLOBAL);*/
	
    is_static = 0;
	
	if (CBU_GLOBAL.config.widget.tip_2 == 1) {
		
/*phone_static = CBU_GLOBAL.config.widget.phone_static;*/
		default_scenarii = 0;
		phone_array = CBU_GLOBAL.config.widget.tip_2_routing;
		phone_array2 = [];
		phone_array3 = [];
		for ( i = 0; i < phone_array.length; i++) {
  			if(phone_array[i].is_default == 1){
					default_scenarii = 1;
					phone_array3.push(phone_array[i]);
					
				}
			else{
				if(phone_array[i].class_replace != null){
				if(phone_array[i].class_replace != ''){	
				if(phone_array[i].class_replace != '.'){	
				if(document.querySelector(phone_array[i].class_replace)){
						phone_array2.push(phone_array[i]);
					}
				}}}
				}	
		}

	
		if(phone_array2.length > 0){
			phone_array = phone_array2;
			
			}
			else{
			phone_array = phone_array3;
			}
	
	
	
		if(document.querySelector('.js-city-select')){
			
		document.querySelector('.js-city-select').addEventListener('click', function(){
		
   						 setCookie("olev_phone_track", 1, {
                        expires: -1
                    })
								    setCookie("olev_phone_track2", 1, {
                        expires: -1
                    })
			});
		
		}
		
		
		
		if(phone_array.length >0){
		dinamic_phone_array = phone_array.filter(function (phone_array) { return phone_array.type == "1" });
		
		static_phone_array = phone_array.filter(function (phone_array) { return phone_array.type == "2" });
		
		if (dinamic_phone_array.length > 0){
			
	show_phone_neiros = 0;		
	dinamic_phone_array2 = dinamic_phone_array.filter(function (dinamic_phone_array) { return dinamic_phone_array.canals.length == 0 });	
 if (dinamic_phone_array2.length > 0){
	mass_podmena_dinamic = podmena_dinamic(dinamic_phone_array2[0].phone,dinamic_phone_array2[0].phone2)
	show_phone_neiros = 1;	
	replacenumber(mass_podmena_dinamic.olev_phone_track2, mass_podmena_dinamic.olev_phone_track, dinamic_phone_array2[0].class_replace)
			olev_phone_track = mass_podmena_dinamic.olev_phone_track;
		olev_phone_track2 = mass_podmena_dinamic.olev_phone_track2;
	 }
else{
	dinamic_phone_array3 = dinamic_phone_array.filter(function (dinamic_phone_array) { return dinamic_phone_array.canals.length == 2 });	
	if(dinamic_phone_array3.length > 0){
	kanal1 = dinamic_phone_array3[0].canals[0];
	kanal2 = dinamic_phone_array3[0].canals[1];
	neiros_show = get_cookie("neiros_show");
	if(neiros_show == null){
		neiros_show = '';
		}
	if(params_neiros['neiros'] === kanal1 || params_neiros['neiros'] === kanal2 ||   neiros_show.indexOf(kanal1) > 0  || neiros_show.indexOf(kanal2) > 0){
	mass_podmena_dinamic2 = podmena_dinamic(dinamic_phone_array3[0].phone,dinamic_phone_array3[0].phone2)
	replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track,dinamic_phone_array3[0].class_replace)
			olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
		olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
			 show_phone_neiros = 1;		
				if(!get_cookie("neiros_show")){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal1+','+kanal2	  
				setCookie('neiros_show',all_canals, dada_year)
				}	
		}
		}
		
	else{	
		
	dinamic_phone_array3 = dinamic_phone_array.filter(function (dinamic_phone_array) { return dinamic_phone_array.canals.length == 1 });	
	if(dinamic_phone_array3.length == 2){
	kanal1 = dinamic_phone_array3[0].canals[0];
	kanal2 = dinamic_phone_array3[1].canals[0];
	neiros_show = get_cookie("neiros_show");
	if(neiros_show == null){
		neiros_show = '';
		}
	if(params_neiros['neiros'] === kanal1 ||  neiros_show === kanal1) {
	mass_podmena_dinamic2 = podmena_dinamic(dinamic_phone_array3[0].phone,dinamic_phone_array3[0].phone2)
	replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track,dinamic_phone_array3[0].class_replace)
			olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
		olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
			 show_phone_neiros = 1;		
				if(!get_cookie("neiros_show")){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal1	  
				setCookie('neiros_show',all_canals, dada_year)
				}	
		}
	
	if(params_neiros['neiros'] === kanal2 ||  neiros_show === kanal2) {
	mass_podmena_dinamic2 = podmena_dinamic(dinamic_phone_array3[1].phone,dinamic_phone_array3[1].phone2)
	replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track,dinamic_phone_array3[0].class_replace)
		olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
		olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
			 show_phone_neiros = 1;		
				if(!get_cookie("neiros_show")){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal2	  
				setCookie('neiros_show',all_canals, dada_year)
				}	
		}	
		
		
		}
		
		if(dinamic_phone_array3.length == 1){
	kanal1 = dinamic_phone_array3[0].canals[0];
	neiros_show = get_cookie("neiros_show");
	if(neiros_show == null){
		neiros_show = '';
		}
	if(params_neiros['neiros'] === kanal1 ||  neiros_show === kanal1) {
	mass_podmena_dinamic2 = podmena_dinamic(dinamic_phone_array3[0].phone,dinamic_phone_array3[0].phone2)
	replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track,dinamic_phone_array3[0].class_replace)
						olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
		olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
			 show_phone_neiros = 1;		
				if(!get_cookie("neiros_show")){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal1	  
				setCookie('neiros_show',all_canals, dada_year)
				}	
		}
	

		
		
		}	
			
		}
		
	}	 


         
      
			 		
			 }
			 
			 else{
	/*Статичиская подмена*/			 
	show_phone_neiros = 0;		
	static_phone_array2 = static_phone_array.filter(function (static_phone_array) { return static_phone_array.canals.length == 0 });	
 if (static_phone_array2.length > 0){
	if( static_phone_array2[0].class_replace !== null){
	mass_podmena_dinamic = podmena_dinamic(static_phone_array2[0].phone,static_phone_array2[0].phone2)
	show_phone_neiros = 1;	
	replacenumber(mass_podmena_dinamic.olev_phone_track2, mass_podmena_dinamic.olev_phone_track, static_phone_array2[0].class_replace)
	olev_phone_track = mass_podmena_dinamic.olev_phone_track;
	olev_phone_track2 = mass_podmena_dinamic.olev_phone_track2;
	
	
	}
	 }
else{
	
	static_phone_array3 = static_phone_array.filter(function (static_phone_array) { return  static_phone_array.canals.length == 2 });	
	
	if(static_phone_array3.length > 0){
	if( static_phone_array3[0].class_replace !== null){

	kanal1 = static_phone_array3[0].canals[0];
	kanal2 = static_phone_array3[0].canals[1];
	neiros_show = get_cookie("neiros_show");
		if(neiros_show == null){
		neiros_show = '';
		}
	if(params_neiros['neiros'] === kanal1 || params_neiros['neiros'] === kanal2 ||   neiros_show.indexOf(kanal1) > 0  || neiros_show.indexOf(kanal2) > 0){
	mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[0].phone,static_phone_array3[0].phone2)
	replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[0].class_replace)
					olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
		olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
			 show_phone_neiros = 1;		
				if(!get_cookie("neiros_show")){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal1+','+kanal2	  
				setCookie('neiros_show',all_canals, dada_year)
				}	
		}
		}
	
	}
	else{
		
	static_phone_array3 = static_phone_array.filter(function (static_phone_array) { return  static_phone_array.canals.length == 1 });
	
	console.log(sb.current.typ);	
	if(static_phone_array3.length === 3){		
		if( static_phone_array3[0].class_replace !== null){
	kanal1 = static_phone_array3[0].canals[0];
	kanal2 = static_phone_array3[1].canals[0]
	kanal3 = static_phone_array3[2].canals[0]
	
		if(params_neiros['neiros'] === kanal1){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal1	  
				setCookie('neiros_show',all_canals, dada_year)
		}	
		
	if(params_neiros['neiros'] === kanal2){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal2	  
				setCookie('neiros_show',all_canals, dada_year)
		}	
		
	if(kanal3 === sb.current.typ+'1'){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal3	  
				setCookie('neiros_show',all_canals, dada_year)
		}		
		
	
	neiros_show = get_cookie("neiros_show");
		if(neiros_show == null){
		neiros_show = '';
		}
	
	
	if(params_neiros['neiros'] === kanal1 || neiros_show  === kanal1  ){
				         setCookie("olev_phone_track", static_phone_array3[0].phone, {
                        expires: 900
                    });
                    setCookie("olev_phone_track2", static_phone_array3[0].phone2, {
                        expires: 900
                    });
	mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[0].phone,static_phone_array3[0].phone2)
	replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[0].class_replace)
				olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
		olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
			 show_phone_neiros = 1;		
				if(!get_cookie("neiros_show")){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal1	  
				setCookie('neiros_show',all_canals, dada_year)
				}	
				
		}
		
	if(params_neiros['neiros'] === kanal2 || neiros_show  === kanal2  ){
		         setCookie("olev_phone_track", static_phone_array3[1].phone, {
                        expires: 900
                    });
                    setCookie("olev_phone_track2", static_phone_array3[1].phone2, {
                        expires: 900
                    });
	mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[1].phone,static_phone_array3[1].phone2)
	replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[1].class_replace)
			olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
		olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
		
		
			 show_phone_neiros = 1;		
				if(!get_cookie("neiros_show")){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal2	  
				setCookie('neiros_show',all_canals, dada_year)
				}	
		}	
		
					
	if(kanal3 === sb.current.typ+'1' || neiros_show  === kanal3  ){
		         setCookie("olev_phone_track", static_phone_array3[2].phone, {
                        expires: 900
                    });
                    setCookie("olev_phone_track2", static_phone_array3[2].phone2, {
                        expires: 900
                    });
	mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[2].phone,static_phone_array3[2].phone2)
	replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[2].class_replace)
			olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
		olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
		
		
			 show_phone_neiros = 1;		
				if(!get_cookie("neiros_show")){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal3	  
				setCookie('neiros_show',all_canals, dada_year)
				}	
		}		
		
	}	
	
	
		
		
		}
		
	if(static_phone_array3.length === 4){		
		if( static_phone_array3[0].class_replace !== null){
	kanal1 = static_phone_array3[0].canals[0];
	kanal2 = static_phone_array3[1].canals[0]
	kanal3 = static_phone_array3[2].canals[0]
	kanal4 = static_phone_array3[3].canals[0]
	
		if(params_neiros['neiros'] === kanal1){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal1	  
				setCookie('neiros_show',all_canals, dada_year)
		}	
		
	if(params_neiros['neiros'] === kanal2){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal2	  
				setCookie('neiros_show',all_canals, dada_year)
		}	
		
	if(kanal3 === sb.current.typ+'1'){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal3	  
				setCookie('neiros_show',all_canals, dada_year)
		}		
		
	
	neiros_show = get_cookie("neiros_show");
		if(neiros_show == null){
		neiros_show = '';
		}
	
	
	if(params_neiros['neiros'] === kanal1 || neiros_show  === kanal1  ){
				         setCookie("olev_phone_track", static_phone_array3[0].phone, {
                        expires: 900
                    });
                    setCookie("olev_phone_track2", static_phone_array3[0].phone2, {
                        expires: 900
                    });
	mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[0].phone,static_phone_array3[0].phone2)
	replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[0].class_replace)
				olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
		olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
			 show_phone_neiros = 1;		
				if(!get_cookie("neiros_show")){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal1	  
				setCookie('neiros_show',all_canals, dada_year)
				}	
				
		}
		
	if(params_neiros['neiros'] === kanal2 || neiros_show  === kanal2  ){
		         setCookie("olev_phone_track", static_phone_array3[1].phone, {
                        expires: 900
                    });
                    setCookie("olev_phone_track2", static_phone_array3[1].phone2, {
                        expires: 900
                    });
	mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[1].phone,static_phone_array3[1].phone2)
	replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[1].class_replace)
			olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
		olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
		
		
			 show_phone_neiros = 1;		
				if(!get_cookie("neiros_show")){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal2	  
				setCookie('neiros_show',all_canals, dada_year)
				}	
		}	
		
					
	if(kanal3 === sb.current.typ+'1' || neiros_show  === kanal3  ){
		         setCookie("olev_phone_track", static_phone_array3[2].phone, {
                        expires: 900
                    });
                    setCookie("olev_phone_track2", static_phone_array3[2].phone2, {
                        expires: 900
                    });
	mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[2].phone,static_phone_array3[2].phone2)
	replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[2].class_replace)
			olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
		olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
		
		
			 show_phone_neiros = 1;		
				if(!get_cookie("neiros_show")){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal3	  
				setCookie('neiros_show',all_canals, dada_year)
				}	
		}		
	
	if(kanal4 == 'facebook1'){
			kanal4 = 'fb1';
		}
		
	if(params_neiros['neiros'] === kanal4 || neiros_show  === kanal4  ){
		         setCookie("olev_phone_track", static_phone_array3[3].phone, {
                        expires: 900
                    });
                    setCookie("olev_phone_track2", static_phone_array3[3].phone2, {
                        expires: 900
                    });
	mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[3].phone,static_phone_array3[3].phone2)
	replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[3].class_replace)
			olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
		olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
		
		
			 show_phone_neiros = 1;		
				if(!get_cookie("neiros_show")){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal2	  
				setCookie('neiros_show',all_canals, dada_year)
				}	
		}	
		
		
		
	}	
	
	
		
		
		}	
				
	if(static_phone_array3.length === 2){		
		if( static_phone_array3[0].class_replace !== null){
	kanal1 = static_phone_array3[0].canals[0];
	kanal2 = static_phone_array3[1].canals[0]
	
		if(params_neiros['neiros'] === kanal1){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal1	  
				setCookie('neiros_show',all_canals, dada_year)
		}	
		
	if(params_neiros['neiros'] === kanal2){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal2	  
				setCookie('neiros_show',all_canals, dada_year)
		}	
	
	neiros_show = get_cookie("neiros_show");
		if(neiros_show == null){
		neiros_show = '';
		}
	
	
	if(params_neiros['neiros'] === kanal1 || neiros_show  === kanal1  ){
				         setCookie("olev_phone_track", static_phone_array3[0].phone, {
                        expires: 900
                    });
                    setCookie("olev_phone_track2", static_phone_array3[0].phone2, {
                        expires: 900
                    });
	mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[0].phone,static_phone_array3[0].phone2)
	replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[0].class_replace)
				olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
		olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
			 show_phone_neiros = 1;		
				if(!get_cookie("neiros_show")){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal1	  
				setCookie('neiros_show',all_canals, dada_year)
				}	
				
		}
		
	if(params_neiros['neiros'] === kanal2 || neiros_show  === kanal2  ){
		         setCookie("olev_phone_track", static_phone_array3[1].phone, {
                        expires: 900
                    });
                    setCookie("olev_phone_track2", static_phone_array3[1].phone2, {
                        expires: 900
                    });
	mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[1].phone,static_phone_array3[1].phone2)
	replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[1].class_replace)
			olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
		olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
		
		
			 show_phone_neiros = 1;		
				if(!get_cookie("neiros_show")){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal2	  
				setCookie('neiros_show',all_canals, dada_year)
				}	
		}	
		
		
	}	
	
	
		
		
		}
	

	
	if(static_phone_array3.length === 1){	
		
		if( static_phone_array3[0].class_replace !== null){
	kanal1 = static_phone_array3[0].canals[0];

	
	neiros_show = get_cookie("neiros_show");
		if(neiros_show == null){
		neiros_show = '';
		}
		
	if(params_neiros['neiros'] === kanal1 || neiros_show  === kanal1  ){
	mass_podmena_dinamic2 = podmena_dinamic(static_phone_array3[0].phone,static_phone_array3[0].phone2)
	replacenumber(mass_podmena_dinamic2.olev_phone_track2, mass_podmena_dinamic2.olev_phone_track, static_phone_array3[0].class_replace)
		olev_phone_track = mass_podmena_dinamic2.olev_phone_track;
		olev_phone_track2 = mass_podmena_dinamic2.olev_phone_track2;
	
			 show_phone_neiros = 1;		
				if(!get_cookie("neiros_show")){
				var date = new Date;
				date.setDate(date.getDate() + 1);
						 dada_year={
					 'expires': date,
					 'path': '/'
					 
					 }
				all_canals = kanal1	  
				setCookie('neiros_show',all_canals, dada_year)
				}	
		}
		
		
		
	}	
	
	
		
		
		}

		

		
	}	 


         
      
				 
				 }
		
			
        
				}
       
    }
	}

    olev_time_track = get_cookie("olev_time_track");

	
    if (get_cookie("olev_time_track") == null) {
        tim = time();
        setCookie("olev_time_track", tim, {
            expires: 900
        });
        olev_time_track = tim;

    }

   /* console.log('GET_COOK');*/



    if ((neiros_visit == null)||(typeof neiros_visit === 'undefined')||(neiros_visit == 'undefined')) {
        send_1_metrika(sb, _ym_uid, _gid, olev_phone_track, olev_phone_track2,show_phone_neiros);

    } else {
     
        send_2_metrika(sb, _ym_uid, _gid, olev_phone_track, olev_phone_track2,show_phone_neiros)
        all_widgets_go(sb, _ym_uid, _gid, olev_phone_track, olev_phone_track2)
    }


}

function all_widgets_go(sb) {
    if (CBU_GLOBAL.config.widget.tip_0 == 1) {
        var newdocpromo = document.createElement("div");
        newdocpromo.className = "wrp_cbu", newdocpromo.innerHTML = '<div   class="wrp_cbu_w_tip_1" style="background: #' + CBU_GLOBAL.config.widget.tip_0_background + '; ' + CBU_GLOBAL.config.widget.tip_0_position_x + ': 0px;' + CBU_GLOBAL.config.widget.tip_0_position_y + ': 0px;">' +
            ' <div class=" " style="color: #' + CBU_GLOBAL.config.widget.tip_0_color + '">Промокод</div><div style="color: #' + CBU_GLOBAL.config.widget.tip_0_color + '">' + sb.promo.code + '</div> </div>', document.body.appendChild(newdocpromo)
    }

    if (CBU_GLOBAL.config.widget.tip_1 == 1) {

        if (CBU_GLOBAL.config.widget.tip_1_form == 1) {

         //   include(CBU_GLOBAL.config.widget.tip_1_form_url);
         //   console.log(CBU_GLOBAL.config.widget.tip_1_form_url);
        }
        if (CBU_GLOBAL.config.widget.tip_1_dop == 1) {

            include(CBU_GLOBAL.config.widget.tip_1_dop_url);
    /*        console.log(CBU_GLOBAL.config.widget.tip_1_dop_url);*/
        }
        if (CBU_GLOBAL.config.widget.tip_1_osn == 1) {

            var widget_name = 'callback';
        }

    }

    if ((CBU_GLOBAL.config.widget.tip_12 == 1) || (CBU_GLOBAL.config.widget.tip_1_osn == 1)) {

        if ((CBU_GLOBAL.config.widget.tip_12 == 1) && (CBU_GLOBAL.config.widget.tip_1_osn == 1)) {
            var time_change = 5
        }


        if (CBU_GLOBAL.config.widget.tip_12 == 1) {
            var widget_name = 'widget';
        }


        include(CBU_GLOBAL.config.widget.tip_12_url)
    }
    if (CBU_GLOBAL.config.widget.tip_13 == 1) {

        include(CBU_GLOBAL.config.widget.tip_13_url)
    }
    if (CBU_GLOBAL.config.widget.tip_19_status == 1) {

        include(CBU_GLOBAL.config.widget.tip_19_url)
    }


    if (CBU_GLOBAL.config.widget.tip_9 == 1) {

        new_email = CBU_GLOBAL.config.widget.tip_email_1 + '+' + sb.promo.code + '@' + CBU_GLOBAL.config.widget.tip_email_2

  /*      window.onload = function () {*/
 		
            /*start email*/
            idelementemail = CBU_GLOBAL.config.widget.tip_email_3.split('#')[1];
            classelementemail = CBU_GLOBAL.config.widget.tip_email_3.split('.')[1];

          /*  console.log(classelementemail);*/
            a = document.getElementsByClassName(classelementemail);/*console.log(a);*/
            for (var i = 0; i < a.length; i++) {
                a[i].innerHTML = new_email;
                if (CBU_GLOBAL.config.widget.tip_email_4 == 0) {
                    a[i].innerHTML = new_email;
                } else {
                    a[i].innerHTML = '<a href="mailto:' + new_email + '">' + new_email + '</a>';
                }

            }

            bn = document.getElementById(idelementemail);
            if (bn != null) {

                if (CBU_GLOBAL.config.widget.tip_email_4 == 0) {
                    bn.innerHTML = new_email;
                } else {
                    bn.innerHTML = '<a href="mailto:' + new_email + '">' + new_email + '</a>';
                }

            }

            /*start email*/


            //  document.body.innerHTML = document.body.innerHTML.replace(CBU_GLOBAL.config.widget.tip_email, new_email);
     /*   }*/

    }


}

function send_1_metrika(sb, _ym_uid, _gid, olev_phone_track, olev_phone_track2,show_phone_neiros) {
  if(roi_get==1) {
url_neiros = '';
if(params_neiros['neiros']){
	url_neiros += '&neiros='+encodeURIComponent(JSON.stringify(params_neiros['neiros']));
	}
if(params_neiros['neiros_referrer']){
	url_neiros += '&neiros_referrer='+encodeURIComponent(JSON.stringify(params_neiros['neiros_referrer']));
	}
if(params_neiros['neiros_position']){
	url_neiros += '&neiros_position='+encodeURIComponent(JSON.stringify(params_neiros['neiros_position']));
	}

      var body = 'url=' + encodeURIComponent(JSON.stringify(window.location.href)) +
	   '&roistat_visit=' + roistat_visit +
	    '&type=pageview&_ym_uid=' + _ym_uid+
		'&show_phone=' + show_phone_neiros+
		'&phone_status_dinamic='+CBU_GLOBAL.config.widget.phone_status_dinamic+
		'&olev_phone_track2=' + encodeURIComponent(olev_phone_track2)+
		'&_gid=' + encodeURIComponent(_gid) +url_neiros ;

      var xhr = new XMLHttpRequest();
      xhr.onreadystatechange = function () {
          if (this.readyState == 4 && this.status == 200) {
             /* console.log(this.responseText);*/
              for_cookie = JSON.parse(this.responseText);
              setCookie("neiros_visit_v1", for_cookie['neiros_visit'], {
                  expires: 87776000
              });
              neiros_visit = for_cookie['neiros_visit'];
              ;

              all_widgets_go(sb, _ym_uid, _gid, olev_phone_track, olev_phone_track2);
              send_2_metrika(sb, _ym_uid, _gid, olev_phone_track, olev_phone_track2);
			  
          }
		  else{

			  	if(neiros_visit === null){
					neiros_visit = get_cookie("neiros_visit_v1");
					}
			  	NeirosDatalayer.push({
			/*	'url' : encodeURIComponent(JSON.stringify(window.location.href)),
			   'roistat_visit' : roistat_visit,
				'_ym_uid' : _ym_uid,
				'show_phone' : show_phone_neiros,
				'phone_status_dinamic':CBU_GLOBAL.config.widget.phone_status_dinamic,
				'olev_phone_track2' : encodeURIComponent(olev_phone_track2),
				'_gid' : encodeURIComponent(_gid),
				'metrika': 'metrika_first',*/
				'neiros_visit': neiros_visit,
				'type' : 'event',
				'name_event' : 'neiros_form'	
				  })
				  
			  }
      };

      xhr.open("POST", 'https://cloud.neiros.ru/v1/api/metrika_first/' + CBU_GLOBAL.config.widget.key, true);

      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

      xhr.send(body);

  }
}

function send_2_metrika(sb, _ym_uid, _gid, olev_phone_track, olev_phone_track2,show_phone_neiros) {



    if(neiros_last_vst==null){
        neiros_last_vst=0;


    }
url_neiros = '';
if(params_neiros['neiros']){
	url_neiros += '&neiros='+encodeURIComponent(JSON.stringify(params_neiros['neiros']));
	}
if(params_neiros['neiros_referrer']){
	url_neiros += '&neiros_referrer='+encodeURIComponent(JSON.stringify(params_neiros['neiros_referrer']));
	}
if(params_neiros['neiros_position']){
	url_neiros += '&neiros_position='+encodeURIComponent(JSON.stringify(params_neiros['neiros_position']));
	}

    var reff = document.referrer;
    if (reff != '') {
		host = window.location.host
        referal_url = new URL(reff).hostname
		if(host === referal_url){
			sb.current.rf = host;
			sb.current_add.rf = host;
			}
		 
    }
	current_new = sb.current.src;
	if(current_new.indexOf('yandex') > -1 ){

		if(current_new.indexOf('yabs.yandex.ru') > -1 || current_new.indexOf('direct.yandex.ru') > -1){
		sb.current.src = 'yandex'
		sb.current.typ = 'yandex_direct'
		sb.current.mdm = 'yandex_direct'
			}
			else{
					sb.current.src = 'yandex'
		sb.current.typ = 'organic'
		sb.current.mdm = 'organic'	
				}
		
		}
    var body = 'neiros_visit=' + neiros_visit +
        '&first=' + encodeURIComponent(JSON.stringify(sb.first)) +
        '&neiros_last_vst=' + encodeURIComponent(neiros_last_vst) +
        '&url=' + encodeURIComponent(JSON.stringify(window.location.href)) +
		'&type=pageview&current=' + encodeURIComponent(JSON.stringify(sb.current)) +
        '&first_add=' + encodeURIComponent(JSON.stringify(sb.first_add)) +
        '&current_add=' + encodeURIComponent(JSON.stringify(sb.current_add)) +
        '&session=' + encodeURIComponent(JSON.stringify(sb.session)) +
        '&udata=' + encodeURIComponent(JSON.stringify(sb.udata)) +
        '&_ym_uid=' + encodeURIComponent(JSON.stringify(_ym_uid)) +
        '&_gid=' + encodeURIComponent(JSON.stringify(_gid)) +
        '&olev_phone_track=' + encodeURIComponent(olev_phone_track) +
        '&olev_phone_track2=' + encodeURIComponent(olev_phone_track2) +
		'&show_phone=' + encodeURIComponent(show_phone_neiros) +
		'&phone_status_dinamic=' + CBU_GLOBAL.config.widget.phone_status_dinamic +
        '&roistat_visit=' + get_cookie("roistat_visit") +
        '&promo=' + encodeURIComponent(JSON.stringify(sb.promo.code))+url_neiros;


        neiros_last_vst=sb.udata.vst;
    setCookie('neiros_last_vst',sb.udata.vst, {
        expires: 900
    });
	
		  	if(neiros_visit === null){
					neiros_visit = get_cookie("neiros_visit_v1");
					}
			  	NeirosDatalayer.push({ 
				'neiros_visit': neiros_visit,/*
				'first': encodeURIComponent(JSON.stringify(sb.first)),
				'neiros_last_vst': encodeURIComponent(neiros_last_vst),
				'url': encodeURIComponent(JSON.stringify(window.location.href)),
				'current': encodeURIComponent(JSON.stringify(sb.current_add)),
				'first_add': encodeURIComponent(JSON.stringify(sb.first_add)),
				 'current_add' : encodeURIComponent(JSON.stringify(sb.current_add)),
				  'session' : encodeURIComponent(JSON.stringify(sb.session)),
				  'udata' : encodeURIComponent(JSON.stringify(sb.udata)),
				  '_ym_uid' : encodeURIComponent(JSON.stringify(_ym_uid)), 
				  '_gid' : encodeURIComponent(JSON.stringify(_gid))	, 
				  'olev_phone_track' : encodeURIComponent(olev_phone_track), 
				  'olev_phone_track2' : encodeURIComponent(olev_phone_track2), 
				  'show_phone' : encodeURIComponent(show_phone_neiros), 
				  'phone_status_dinamic' : encodeURIComponent(CBU_GLOBAL.config.widget.phone_status_dinamic), 				                  'roistat_visit': get_cookie("roistat_visit"), 
				  'promo' :get_cookie("roistat_visit"),
					'metrika': 'metrika',*/
					'type' : 'event',
					'name_event' : 'neiros_form'
				  })





    var xhr = new XMLHttpRequest();

    xhr.open("POST", 'https://cloud.neiros.ru/v1/api/metrika/' + CBU_GLOBAL.config.widget.key, true);

    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

    xhr.send(body);
}

function NeirosEventSend(type_event, data) {
	
	if(data){
	NeirosDatalayer[0].data_event = data
	}
	
	NeirosDatalayer[0].name_event = type_event;

	if(NeirosDatalayer[0].neiros_visit === null){
		
		NeirosDatalayer[0].neiros_visit = get_cookie("neiros_visit_v1");
		}
	
	body = "data="+JSON.stringify(NeirosDatalayer[0]);
    var xhr = new XMLHttpRequest();
	
    xhr.open("POST", 'https://cloud.neiros.ru/api/ajax_form/' + CBU_GLOBAL.config.widget.key , true);

    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

    xhr.send(body);
}


function time() {
    return parseInt(new Date().getTime() / 1000)
}

function wistis_js_widget(order_id, phone, email, name) {

    var xhr = new XMLHttpRequest();

    var body = 'info=' + encodeURIComponent(order_id) + '&phone=' + phone + '&email=' + email + '&name=' + name + '&tip=3&hash=' + sbjs.get.first_add.hash;


    xhr.open("POST", 'https://cloud.neiros.ru/api/inputjs/' + CBU_GLOBAL.config.widget.key, true);
    xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');

//    xhr.onreadystatechange = ...;

    xhr.send(body);

}

function include(url) {
    var script = document.createElement('script');
    script.src = url;
    document.getElementsByTagName('head')[0].appendChild(script);
}


function get_cookie_roistat(cookie_name) {
    var results = document.cookie.match('(^|;) ?' + cookie_name + '=([^;]*)(;|$)');

    if (results){
        roi_get=1;
        return (unescape(results[2]));}
    else{
        roi_get=1;
        return null;}
}



function setCookie(name, value, options) {
    options = options || {};

    var expires = options.expires;

    if (typeof expires == "number" && expires) {
        var d = new Date();
        d.setTime(d.getTime() + expires * 1000);
        expires = options.expires = d;
    }
    if (expires && expires.toUTCString) {
        options.expires = expires.toUTCString();
    }

    value = encodeURIComponent(value);

    var updatedCookie = name + "=" + value;

    for (var propName in options) {
        updatedCookie += "; " + propName;
        var propValue = options[propName];
        if (propValue !== true) {
            updatedCookie += "=" + propValue;
        }
    }

    document.cookie = updatedCookie;
}